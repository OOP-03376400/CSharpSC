<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="finlandBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANUAAACCCAMAAADmFX3+AAAABGdBTUEAALGPC/xhBQAAADBQTFRF////
        ADWAACR5+fr8foeuanKgACt8doOq9ff5ADB+ACZ6hY6yOVGOADJ/M0uLc4Gpm3PHGQAAAPVJREFUeF7t
        2ktuwkAURcEO5EOAJPvfbTLoaQRqJMsHVY2fbJ/x9Vh3ent/ueHwMW87VHWo6lDVoapDVYeqDlUdqjpU
        dajqUNWhqkNVh6oOVR2qOlR1qOpQ1aGqQ1WHqo49Vx2X3VP188DzHzBe131/zY//1+f1Mm+3NQ7Lzjej
        /rLm7cbGfP1zUdWhqkNVh6oOVR2qOlR1qOpQ1aGqQ1WHqg5VHao6VHU8adXcsRbseZWbm+OKHS+ocx9e
        sOe1e53/LTpUdajqUNWhqkNVh6oOVR2qOlR1qOpQ1aGqQ1WHqg5VHao6VHWo6lDVoapDVYeqTY3xC81Y
        Pk1yzs1cAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="franceBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANUAAACOCAMAAACR172FAAAABGdBTUEAALGPC/xhBQAAABtQTFRFACOV
        ////7Sk5AB2T1dzu/N3g8FdhQlOn7SM0glcDxgAAAT5JREFUeF7tz7kBAkEAhVBdz/4rNiGV5E/IqwBu
        Rzw+z/sJr/f3OoGsUVemK0PWqCvTlSFr1JXpypA16sp0ZcgadWW6MmSNujJdGbJGXZmuDFmjrkxXhqxR
        V6YrQ9aoK9OVIWvUlenKkDXqynRlyBp1ZboyZI26Ml0ZskZdma4MWaOuTFeGrFFXpitD1qgr05Uha9SV
        6cqQNerKdGXIGnVlujJkjboyXRmyRl2ZrgxZo65MV4asUVemK0PWqCvTlSFr1JXpypA16sp0ZcgadWW6
        MmSNujJdGbJGXZmuDFmjrkxXhqxRV6YrQ9aoK9OVIWvUlenKkDXqynRlyBp1ZboyZI26Ml0ZskZdma4M
        WaOuTFeGrFFXpitD1qgr05Uha9SV6cqQNerKdGXIGnVlujJkjboyXRmyRl2Zrv67rh+ES4Uh0VwlWQAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="germanyBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANYAAACACAMAAABA6mf2AAAABGdBTUEAALGPC/xhBQAAABhQTFRFAAAA
        /84A3QAAbwAA6AAA2gAA9KwA/9IAYQdYCgAAAIVJREFUeF7tzwERhEAMALHeA49/x+jYTuIgAwAAAAAA
        AAAAXCvNvdL8VtIq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtEq2dp6Vpr/SvOuNGcl
        rRKtEq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtEq0SrRKtjnM+P5l6DbQgo0AAAAAASUVORK5C
        YII=
</value>
  </data>
</root>